---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ GOGS_APPNAME }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ GOGS_POSTGRESQL_APPNAME }}
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    description: Exposes the database server to gogs application
  name: {{ GOGS_POSTGRESQL_APPNAME }}
  labels:
    app: {{ GOGS_APPNAME }}
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
  selector:
    name: {{ GOGS_POSTGRESQL_APPNAME }}
---
kind: DeploymentConfig
apiVersion: v1
metadata:
  annotations:
    description: Postgresql database for gogs application
  name: {{ GOGS_POSTGRESQL_APPNAME }}
  labels:
    app: {{ GOGS_APPNAME }}
spec:
  replicas: 1
  selector:
    name: {{ GOGS_POSTGRESQL_APPNAME }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ GOGS_POSTGRESQL_APPNAME }}
      name: {{ GOGS_POSTGRESQL_APPNAME }} 
    spec:
      serviceAccountName: {{ GOGS_POSTGRESQL_APPNAME }}
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: {{ GOGS_POSTGRESQL_USERNAME }}
        - name: POSTGRESQL_PASSWORD
          value: {{ GOGS_POSTGRESQL_PASSWORD }}
        - name: POSTGRESQL_DATABASE
          value: {{ GOGS_POSTGRESQL_DB }}
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "{{ GOGS_POSTGRESQL_MAX_CONNECTIONS }}"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: "{{ GOGS_POSTGRESQL_SHARED_BUFFERS }}"
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: {{ GOGS_POSTGRESQL_ADMIN_PASSWORD }}
        image: {{ GOGS_POSTGRESQL_IMAGE }}
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
          failureThreshold: 10
          periodSeconds: 20
        name: postgresql
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
          initialDelaySeconds: 30
          timeoutSeconds: 1
          failureThreshold: 10
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: {{ GOGS_POSTGRESQL_PV }}
      volumes:
      - name: {{ GOGS_POSTGRESQL_PV }}
        persistentVolumeClaim:
          claimName: {{ GOGS_POSTGRESQL_PV }}
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: {{ GOGS_POSTGRESQL_IMAGE }}
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    description: The Gogs server's http port
    service.alpha.openshift.io/dependencies: '[{"name":"{{ GOGS_POSTGRESQL_APPNAME }}","namespace":"","kind":"Service"}]'
  labels:
    app: {{ GOGS_APPNAME }}
  name: {{ GOGS_APPNAME }}
spec:
  ports:
  - name: 3000-tcp
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: {{ GOGS_APPNAME }}
    deploymentconfig: {{ GOGS_APPNAME }}
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
kind: Route
apiVersion: v1
metadata:
  annotations:
    description: Route for application's http service.
  labels:
    app: {{ GOGS_APPNAME }}
  name: {{ GOGS_APPNAME }}
spec:
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  host: {{ GOGS_HOSTNAME }}
  to:
    kind: Service
    name: {{ GOGS_APPNAME }}
---
kind: DeploymentConfig
apiVersion: v1
metadata:
  labels:
    app: {{ GOGS_APPNAME }}
  name: {{ GOGS_APPNAME }}
spec:
  replicas: 1
  selector:
    app: {{ GOGS_APPNAME }}
    deploymentconfig: {{ GOGS_APPNAME }}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ GOGS_APPNAME }}
        deploymentconfig: {{ GOGS_APPNAME }}
    spec:
      serviceAccountName: {{ GOGS_APPNAME }}
      containers:
      - image: {{ GOGS_APPNAME }}:{{ GOGS_VERSION }}
        imagePullPolicy: Always
        name: {{ GOGS_APPNAME }}
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - name: {{ GOGS_PV }} 
          mountPath: /opt/gogs/data
        - name: gogs-config
          mountPath: /etc/gogs/conf
        readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
        livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ GOGS_PV }}
        persistentVolumeClaim:
          claimName: {{ GOGS_PV }}
      - name: gogs-config
        configMap:
          name: gogs-config
          items:
            - key: app.ini
              path: app.ini
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ GOGS_APPNAME }}
      from:
        kind: ImageStreamTag
        name: {{ GOGS_APPNAME }}:{{ GOGS_VERSION }}
    type: ImageChange
---
kind: ImageStream
apiVersion: v1
metadata:
  labels:
    app: {{ GOGS_APPNAME }}
  name: {{ GOGS_APPNAME }}
spec:
  tags:
  - name: {{ GOGS_VERSION }}
    from:
      kind: DockerImage
      name: {{ GOGS_IMAGE }}
    importPolicy: {}
    annotations:
      description: The Gogs git server docker image
      tags: gogs,go,golang
      version: "{{ GOGS_VERSION }}"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: gogs-config
  labels:
    app: {{ GOGS_APPNAME }}
data:
  app.ini: |
    RUN_MODE = prod
    RUN_USER = gogs
    [database]
    DB_TYPE  = postgres
    HOST     = {{ GOGS_POSTGRESQL_APPNAME }}:5432
    NAME     = {{ GOGS_POSTGRESQL_DB }}
    USER     = {{ GOGS_POSTGRESQL_USERNAME }}
    PASSWD   = {{ GOGS_POSTGRESQL_PASSWORD }}
    [repository]
    ROOT = /opt/gogs/data/repositories
    [server]
    ROOT_URL=http://{{ GOGS_HOSTNAME }}
    SSH_DOMAIN={{ GOGS_HOSTNAME }}
    [security]
    INSTALL_LOCK = "true"
    [service]
    ENABLE_CAPTCHA = false
    [webhook]
    SKIP_TLS_VERIFY = "false"
